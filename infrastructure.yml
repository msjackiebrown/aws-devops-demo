AWSTemplateFormatVersion: '2010-09-09'
Description: 'CloudFormation template for the AWS DevOps Demo Web Application'

Parameters:
  EnvironmentName:
    Type: String
    Default: Dev
    AllowedValues:
      - Dev
      - Test
      - Prod
    Description: Environment name for deployment

  InstanceType:
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - t2.small
      - t2.medium
    Description: EC2 instance type

Resources:
  WebAppSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for web application
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0  # In production, restrict to specific IPs

  WebAppInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess
        - arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforAWSCodeDeploy

  WebAppInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref WebAppInstanceRole

  WebAppInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      ImageId: ami-097947612b141c026  # Updated to the latest Amazon Linux 2 AMI (May 2025)
      SecurityGroupIds:
        - !Ref WebAppSecurityGroup
      IamInstanceProfile: !Ref WebAppInstanceProfile
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-WebApp
        - Key: Environment
          Value: !Ref EnvironmentName
        - Key: CodeDeploy
          Value: WebApp
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          yum update -y
          yum install -y httpd git ruby wget
          systemctl start httpd
          systemctl enable httpd
          
          # Install CodeDeploy Agent
          cd /home/ec2-user
          wget https://aws-codedeploy-${AWS::Region}.s3.amazonaws.com/latest/install
          chmod +x ./install
          ./install auto
          service codedeploy-agent start
          
          # Create a simple index.html while waiting for deployment
          echo "<html><body><h1>AWS DevOps Demo Web App</h1><p>Waiting for CodeDeploy deployment...</p><p>Instance ID: $(curl -s http://169.254.169.254/latest/meta-data/instance-id)</p><p>Region: ${AWS::Region}</p><p>Environment: ${EnvironmentName}</p><p>Deployment Date: $(date)</p></body></html>" > /var/www/html/index.html

  WebAppS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-webapp-artifacts
        - Key: Environment
          Value: !Ref EnvironmentName

Outputs:
  WebsiteURL:
    Description: URL for the web application
    Value: !Sub 'http://${WebAppInstance.PublicDnsName}'
  
  ArtifactBucket:
    Description: S3 bucket for pipeline artifacts
    Value: !Ref WebAppS3Bucket
  
  EC2InstanceId:
    Description: EC2 instance ID
    Value: !Ref WebAppInstance
